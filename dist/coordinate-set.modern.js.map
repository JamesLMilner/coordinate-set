{"version":3,"file":"coordinate-set.modern.js","sources":["../src/coordinate-set.ts"],"sourcesContent":["export class CoordinateSet {\n  constructor(arrOrCoordSet?: [number, number][] | CoordinateSet) {\n    this._map = new Map();\n\n    if (Array.isArray(arrOrCoordSet)) {\n      arrOrCoordSet.forEach((c) => {\n        this._validateCoordinate(c);\n        this._map.set(this._getKey(c), c);\n      });\n      this._size = arrOrCoordSet.length;\n    } else if (arrOrCoordSet instanceof CoordinateSet) {\n      arrOrCoordSet.forEach((c) => {\n        this._map.set(this._getKey(c), c);\n      });\n      this._size = arrOrCoordSet.size;\n    } else {\n      this._size = 0;\n    }\n  }\n\n  private _size: number;\n  private _map: Map<string, [number, number]>;\n\n  private _getKey(coordinates: [number, number]) {\n    return `${coordinates[0]},${coordinates[1]}`;\n  }\n\n  private _validateCoordinate([lng, lat]: [number, number]) {\n    if (\n      !(typeof lng === \"number\" && !isNaN(lng) && lng >= -180 && lng <= 180)\n    ) {\n      throw new Error(\"Longitude must be valid\");\n    } else if (\n      !(typeof lat === \"number\" && !isNaN(lat) && lat >= -90 && lat <= 90)\n    ) {\n      throw new Error(\"Latitude must be valid\");\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (let entry of this._map.entries()) {\n      yield [entry[1], entry[1]];\n    }\n  }\n\n  entries() {\n    return this[Symbol.iterator]();\n  }\n\n  forEach(\n    callback: (\n      value: [number, number],\n      index: number,\n      set: CoordinateSet\n    ) => void\n  ): void {\n    [...this.entries()].forEach((entryValue, entryIndex) => {\n      callback(entryValue[0], entryIndex, this);\n    });\n  }\n\n  // O(1)\n  get size(): number {\n    return this._size;\n  }\n\n  // Ignore setting the size property publically\n  set size(value: number) {}\n\n  has(coordinate: [number, number]) {\n    this._validateCoordinate(coordinate);\n    return Boolean(this._map.get(this._getKey(coordinate)));\n  }\n\n  add(coordinate: [number, number]) {\n    this._validateCoordinate(coordinate);\n    const key = this._getKey(coordinate);\n    if (this._map.get(key)) {\n      return;\n    }\n    this._size++;\n    this._map.set(key, coordinate);\n    return this;\n  }\n\n  delete(coordinate: [number, number]): boolean {\n    this._validateCoordinate(coordinate);\n    const key = this._getKey(coordinate);\n    if (!this._map.get(key)) {\n      return false;\n    }\n    this._size--;\n    return this._map.delete(key);\n  }\n\n  clear() {\n    this._map = new Map();\n    this._size = 0;\n  }\n}\n"],"names":["Symbol","iterator","CoordinateSet","constructor","arrOrCoordSet","_size","_map","this","Map","Array","isArray","forEach","c","_validateCoordinate","set","_getKey","length","size","coordinates","lng","lat","isNaN","Error","_Symbol$iterator","entry","entries","callback","entryValue","entryIndex","value","has","coordinate","Boolean","get","add","key","delete","clear"],"mappings":"QAuCIA,OAAOC,eAvCEC,EACXC,YAAYC,GAmBJC,KAAAA,WACAC,EAAAA,KAAAA,UAnBN,EAAAC,KAAKD,KAAO,IAAIE,IAEZC,MAAMC,QAAQN,IAChBA,EAAcO,QAASC,IACrBL,KAAKM,oBAAoBD,GACzBL,KAAKD,KAAKQ,IAAIP,KAAKQ,QAAQH,GAAIA,KAEjCL,KAAKF,MAAQD,EAAcY,QAClBZ,aAAyBF,GAClCE,EAAcO,QAASC,IACrBL,KAAKD,KAAKQ,IAAIP,KAAKQ,QAAQH,GAAIA,KAEjCL,KAAKF,MAAQD,EAAca,MAE3BV,KAAKF,MAAQ,EAOTU,QAAQG,GACd,MAAO,GAAGA,EAAY,MAAMA,EAAY,KAGlCL,qBAAqBM,EAAKC,IAChC,KACmB,iBAARD,IAAqBE,MAAMF,IAAQA,IAAQ,KAAOA,GAAO,KAElE,MAAM,IAAIG,MAAM,gCAEC,iBAARF,IAAqBC,MAAMD,IAAQA,IAAQ,IAAMA,GAAO,IAEjE,MAAM,IAAIE,MAAM,0BAIpBC,OACE,IAAK,IAAIC,UAAclB,KAAKmB,eACpB,CAACD,EAAM,GAAIA,EAAM,IAI3BC,UACE,OAAYzB,KAAAA,OAAOC,YAGrBU,QACEe,GAMA,IAAInB,KAAKkB,WAAWd,QAAQ,CAACgB,EAAYC,KACvCF,EAASC,EAAW,GAAIC,EAAYrB,QAKpCU,WACF,OAAYZ,KAAAA,MAIVY,SAAKY,IAETC,IAAIC,GAEF,OADAxB,KAAKM,oBAAoBkB,GAClBC,QAAQzB,KAAKD,KAAK2B,IAAI1B,KAAKQ,QAAQgB,KAG5CG,IAAIH,GACFxB,KAAKM,oBAAoBkB,GACzB,MAAMI,EAAM5B,KAAKQ,QAAQgB,GACzB,IAAIxB,KAAKD,KAAK2B,IAAIE,GAKlB,OAFA5B,KAAKF,QACLE,KAAKD,KAAKQ,IAAIqB,EAAKJ,GAEpBxB,KAED6B,OAAOL,GACLxB,KAAKM,oBAAoBkB,GACzB,MAAMI,EAAM5B,KAAKQ,QAAQgB,GACzB,QAAKxB,KAAKD,KAAK2B,IAAIE,KAGnB5B,KAAKF,QACEE,KAAKD,KAAK8B,OAAOD,IAG1BE,QACE9B,KAAKD,KAAO,IAAIE,IAChBD,KAAKF,MAAQ"}